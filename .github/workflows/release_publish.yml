# This is a basic workflow to help you get started with Actions
name: Publish Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Flutter build and release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter pub get
      - run: flutter build apk
      - run: flutter build appbundle
      - id: version
        run: |
          VERSION_NAME=$(~/Android/Sdk/build-tools/*/aapt2 dump badging build/app/outputs/flutter-apk/app-release.apk | grep "versionName" | sed -e "s/.*versionName='//" -e "s/' .*//")
          VERSION_CODE=$(~/Android/Sdk/build-tools/*/aapt2 dump badging build/app/outputs/flutter-apk/app-release.apk | grep "versionCode" | sed -e "s/.*versionCode='//" -e "s/' .*//")
          echo "::set-output name=version::$VERSION_NAME+$VERSION_CODE"
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.version.outputs.version }}
          prerelease: false
          title: release ${{ steps.version.outputs.version }}
          files: |
            build/app/outputs/apk/release/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
