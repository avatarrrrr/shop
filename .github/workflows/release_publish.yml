# This is a basic workflow to help you get started with Actions
name: Publish Release

# Controls when the workflow will run
on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Flutter build and release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Flutter Build
        run: |
          flutter pub get
          flutter build apk
          flutter build appbundle
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - id: version
        name: Catch Version Name and Version Code of apk generated
        run: |
          VERSION_NAME=$($ANDROID_HOME/build-tools/32*/aapt2 dump badging build/app/outputs/flutter-apk/app-release.apk | grep "versionName" | sed -e "s/.*versionName='//" -e "s/' .*//")
          VERSION_CODE=$($ANDROID_HOME/build-tools/32*/aapt2 dump badging build/app/outputs/flutter-apk/app-release.apk | grep "versionCode" | sed -e "s/.*versionCode='//" -e "s/' .*//")
          echo "::set-output name=version::$VERSION_NAME+$VERSION_CODE"
      - uses: marvinpinto/action-automatic-releases@latest
        name: Publish Release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: v${{ steps.version.outputs.version }}
          prerelease: false
          title: release version ${{ steps.version.outputs.version }}
          files: |
            build/app/outputs/apk/release/app-release.apk
            build/app/outputs/bundle/release/app-release.aab